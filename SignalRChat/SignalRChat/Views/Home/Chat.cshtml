
@{
    ViewBag.Title = "Chat";
}
@*theme *@

<h2>Chat</h2>
<div class="popup-box chat-popup" id="qnimate">
    <div class="popup-head">
        <div id="user" class="popup-head-left pull-left"> </div>
        <div class="popup-head-right pull-right">
            <a href="http://myresume.jordanaquino.net" data-widget="remove" id="removeClass" class="chat-header-button pull-right" type="button"><i class="glyphicon glyphicon-off"></i></a>
        </div>
    </div>
    <div id ="scroll" class="popup-messages">
        <div id ="content" class="direct-chat-messages">
        </div>
        
    </div>
    <div class="popup-messages-footer">
        <textarea id="status_message" placeholder="Type a message..." rows="10" cols="40" name="message"></textarea>
        <button id="sendmessage" value="Send" class="bg_none pull-right"><i class="glyphicon glyphicon-thumbs-up"></i> </button>
        
    </div>
</div>

@* end theme *@

<input type="hidden" id="displayname" />




@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var elem = document.getElementById('scroll');
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message, timenow) {
                // Add the message to the page.
                
                $('#content').append('<div class="chat-box-single-line"> ' +
                    '<abbr class="timestamp">' + htmlEncode(timenow) + '</abbr> ' +
                    '</div>' +

                    '<div class="direct-chat-msg doted-border">' +
                    '<div class="direct-chat-info clearfix">' +
                    '<span class="direct-chat-name pull-left">' + htmlEncode(name) +'</span>' +
                    '</div>' +


                    '<div class="direct-chat-text">' +
                      htmlEncode(message) +
                    '</div>' +
                    '<div class="direct-chat-info clearfix">' +
                    '<span class="direct-chat-timestamp pull-right">' + htmlEncode(timenow) + '</span>' +
                    '</div>' +
                    '<div class="direct-chat-info clearfix">' +
                    '<span class="direct-chat-img-reply-small pull-left">' +

                    '</span>' +
                    '<span class="direct-chat-reply-name">Sent</span>' +
                    '</div>' +

                    '</div>');
                var elem = document.getElementById('scroll');
                elem.scrollTop = elem.scrollHeight;
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            document.getElementById('user').innerHTML = $('#displayname').val();
            // Set initial focus to message input box.
            $('#status_message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {

                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#status_message').val(), "");
                    // Clear text box and reset focus for next comment.
                    $('#status_message').val('').focus();
                    
                    
                
                });
            });


        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

